//http://www.testautomationguru.com/selenium-webdriver-how-to-run-automated-tests-inside-a-docker-container/
package seleniunInDocker;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class GooglePage {
	private WebDriver driver;
    @FindBy(name = "q")
    private  WebElement searchBox;

    @FindBy(css = "input.lsb")
    private WebElement searchButton;

    @FindBy(className = "")
    private  List<WebElement> searchResults;

    @FindBy(id = "foot")
    private WebElement footer;

    public GooglePage(WebDriver driver) {
    	this.driver = driver;
        PageFactory.initElements(driver, this);
    }
    public static GooglePage using(WebDriver driver) {
        return new GooglePage(driver);
    }
    public GooglePage goTo() {
    	System.setProperty("webdriver.chrome.driver","C:\\chromedriver\\chromedriver.exe"); 
    	driver = new ChromeDriver();
        driver.get("https://www.google.com");
        return this;
    }

    public GooglePage searchFor(String text) {
        this.searchBox.sendKeys(text);
       //wait.until(ExpectedConditions.elementToBeClickable(searchButton));
        //this.searchButton.click();
      // wait.until(ExpectedConditions.presenceOfElementLocated(By.className("rc")));
        return this;
    }

    public List<WebElement> getResults() {
        return this.searchResults;
    }

}